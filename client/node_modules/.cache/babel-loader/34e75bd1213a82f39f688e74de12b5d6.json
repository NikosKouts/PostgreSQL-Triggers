{"ast":null,"code":"var _jsxFileName = \"/home/nick/Desktop/db2_project_9_2824_2907/client/src/components/students/courses/StudentRemoveCourses.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StudentRemoveCourses = () => {\n  _s();\n\n  const [course, setCourse] = useState([]);\n  const [university, setUniversity] = useState([]);\n  const {\n    student\n  } = useParams();\n\n  const submit = event => {\n    event.preventDefault();\n    if (!course || !university) console.log('[ERROR]: Form Input Missing Parameters');else {\n      fetch(`http://127.0.0.1:8080/courses/${student}/${course}/${university}`, {\n        method: 'DELETE'\n      }).then(response => response.json()).then(data => {\n        console.log(data);\n      }).catch(error => {\n        console.log(error.message);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select Course to Remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"student-course-register-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Course ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 50\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: course,\n            onChange: event => setCourse(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"University\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: university,\n            onChange: event => setUniversity(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        id: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StudentRemoveCourses, \"I5R1f9jd6GkOwHMP2eHJK+sv5o0=\", false, function () {\n  return [useParams];\n});\n\n_c = StudentRemoveCourses;\nexport default StudentRemoveCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentRemoveCourses\");","map":{"version":3,"sources":["/home/nick/Desktop/db2_project_9_2824_2907/client/src/components/students/courses/StudentRemoveCourses.js"],"names":["useState","useParams","StudentRemoveCourses","course","setCourse","university","setUniversity","student","submit","event","preventDefault","console","log","fetch","method","then","response","json","data","catch","error","message","target","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAAA;;AAC/B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACK,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAcN,SAAS,EAA7B;;AAGA,QAAMO,MAAM,GAAIC,KAAD,IAAW;AACtBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAG,CAACP,MAAD,IAAW,CAACE,UAAf,EACIM,OAAO,CAACC,GAAR,CAAY,wCAAZ,EADJ,KAEK;AACDC,MAAAA,KAAK,CAAE,iCAAgCN,OAAQ,IAAGJ,MAAO,IAAGE,UAAW,EAAlE,EAAqE;AACxES,QAAAA,MAAM,EAAE;AADgE,OAArE,CAAL,CAGCC,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMG,IAAI,IAAI;AACVP,QAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACH,OAND,EAOCC,KAPD,CAOQC,KAAD,IAAW;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACC,OAAlB;AACH,OATD;AAUH;AACJ,GAhBD;;AAkBA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,QAAQ,EAAEb,MAAhB;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,8BAAR;AAAA,gCACI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,oBAC6B;AAAA;AAAA;AAAA;AAAA,kBAD7B,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAEL,MAA1B;AAAkC,YAAA,QAAQ,EAAGM,KAAD,IAAWL,SAAS,CAACK,KAAK,CAACa,MAAN,CAAaC,KAAd;AAAhE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,oBAC8B;AAAA;AAAA;AAAA;AAAA,kBAD9B,eAEI;AAAO,YAAA,IAAI,EAAC,MAAZ;AAAmB,YAAA,KAAK,EAAElB,UAA1B;AAAsC,YAAA,QAAQ,EAAGI,KAAD,IAAWH,aAAa,CAACG,KAAK,CAACa,MAAN,CAAaC,KAAd;AAAxE;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAWI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAkBH,CA1CD;;GAAMrB,oB;UAGkBD,S;;;KAHlBC,oB;AA4CN,eAAeA,oBAAf","sourcesContent":["import { useState } from 'react'\nimport { useParams } from 'react-router-dom';\n\nconst StudentRemoveCourses = () => {\n    const [course, setCourse] = useState([]);\n    const [university, setUniversity] = useState([]);\n    const { student } = useParams();\n    \n\n    const submit = (event) => {\n        event.preventDefault();\n        if(!course || !university)\n            console.log('[ERROR]: Form Input Missing Parameters')\n        else {\n            fetch(`http://127.0.0.1:8080/courses/${student}/${course}/${university}`, {\n              method: 'DELETE',\n            })\n            .then(response => response.json())\n            .then(data => {\n                console.log(data)\n            })\n            .catch((error) => {\n                console.log(error.message)\n            })\n        }\n    }\n    \n    return (\n        <>\n            <h3>Select Course to Remove</h3>\n            <form onSubmit={submit}>\n                <div id=\"student-course-register-form\">\n                    <div>\n                        <label>Course ID</label> <br/>\n                        <input type=\"text\" value={course} onChange={(event) => setCourse(event.target.value)}/>\n                    </div>\n                    <div>\n                        <label>University</label> <br/>\n                        <input type=\"text\" value={university} onChange={(event) => setUniversity(event.target.value)}/>\n                    </div>\n                </div>\n                <input type=\"submit\" id=\"submit\"/>\n            </form>\n        </>\n    )\n}\n\nexport default StudentRemoveCourses"]},"metadata":{},"sourceType":"module"}